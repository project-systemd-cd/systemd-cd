openapi: 3.0.0
servers:
  - description: local
    url: http://localhost:1323
info:
  description: systemd-cd API
  version: "1.0.0"
  title: systemd-cd API
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags: []

paths:
  /users/sign_in:
    post:
      summary: sign in
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestBody"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenBody"
        400:
          description: Bad request
        401:
          description: Unauthorized
        500:
          description: Internal server error

  /pipelines:
    get:
      summary: get pipeline list
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/PipelineList"
        204:
          description: No content
        401:
          description: Unauthorized
        500:
          description: Internal server error

  /pipelines/{pipeline_name}:
    get:
      summary: get pipeline
      parameters:
        - $ref: "#/components/parameters/pipeline_name"
        - $ref: "#/components/parameters/embed"
        - $ref: "#/components/parameters/from"
        - $ref: "#/components/parameters/to"
        - $ref: "#/components/parameters/asc"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/PipelineWithEmbedJobs"
                  - $ref: "#/components/schemas/Pipeline"
        400:
          description: Bad request
        401:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error

  /pipelines/{pipeline_name}/jobs:
    get:
      summary: get pipeline job list
      parameters:
        - $ref: "#/components/parameters/pipeline_name"
        - $ref: "#/components/parameters/from"
        - $ref: "#/components/parameters/to"
        - $ref: "#/components/parameters/asc"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobGroupList"
        204:
          description: No content
        400:
          description: Bad request
        401:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error

  /pipelines/{pipeline_name}/jobs/{job_id}:
    get:
      summary: get pipeline job
      parameters:
        - $ref: "#/components/parameters/pipeline_name"
        - $ref: "#/components/parameters/job_id"
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
        400:
          description: Bad request
        401:
          description: Unauthorized
        404:
          description: Not found
        500:
          description: Internal server error

components:
  schemas:
    TokenBody:
      type: object
      properties:
        token:
          type: string
          example: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB.CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC"
      required:
        - token
        
    PipelineList:
      type: array
      items:
        $ref: "#/components/schemas/Pipeline"
        
    Pipeline:
      type: object
      properties:
        name:
          type: string
          example: "pipeline-1"
        git_remote_url:
          type: string
          example: "https://github.com/tingtt/systemd-cd.git"
        git_target_branch:
          type: string
          example: "main"
        git_target_tag_regex:
          type: string
          example: "v*"
        status:
          $ref: "#/components/schemas/StatusPipeline"
        commit_ref:
          type: string
          example: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        systemd_services:
          type: array
          items:
            $ref: "#/components/schemas/SystemdService"
      required: 
        - name
        - git_remote_url
        - git_target_branch
        - status
        - commit_ref
        
    PipelineWithEmbedJobs:
      type: object
      properties:
        name:
          type: string
          example: "pipeline-1"
        git_remote_url:
          type: string
          example: "https://github.com/tingtt/systemd-cd.git"
        git_target_branch:
          type: string
          example: "main"
        git_target_tag_regex:
          type: string
          example: "v*"
        status:
          $ref: "#/components/schemas/StatusPipeline"
        commit_ref:
          type: string
          example: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        systemd_services:
          type: array
          items:
            $ref: "#/components/schemas/SystemdService"
        jobs:
          $ref: "#/components/schemas/JobGroupList"
      required: 
        - name
        - git_remote_url
        - git_target_branch
        - status
        - commit_ref

    StatusPipeline:
      type: string
      enum:
        - "synced"
        - "syncing"
        - "out of sync"
        - "failed"

    SystemdService:
      type: object
      properties:
        name:
          type: string
          example: systemd-service-1
        status:
          $ref: "#/components/schemas/StatusSystemdService"
      required: 
        - name
        - status

    StatusSystemdService:
      type: string
      enum:
        - "running"
        - "stopped"
        - "failed"
        - "not found"
        
    JobGroupList:
      type: array
      items:
        $ref: "#/components/schemas/JobGroup"
        
    JobGroup:
      type: array
      items:
        $ref: "#/components/schemas/Job"

    Job:
      type: object
      properties:
        group_id:
          type: string
          example: "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
        id:
          type: string
          example: "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
        pipeline_name:
          type: string
          example: "pipeline-1"
        branch:
          type: string
          example: "main"
        tag:
          type: string
          example: "v1.0.0"
        commit_id:
          type: string
          example: "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
        commit_author:
          type: string
          example: "tingtt"
        commit_message:
          type: string
          example: "feat: add some feature"
        type:
          type: string
          enum:
            - "test"
            - "build"
            - "install"
        status:
          $ref: "#/components/schemas/StatusPipelineJob"
        timestamp:
          type: integer
          minimum: 0
          description: unix time
        duration:
          type: integer
          minimum: 0
          description: seconds
        logs:
          type: array
          items:
            $ref: "#/components/schemas/JobLog"
      required:
        - group_id
        - id
        - pipeline_name
        - branch
        - commit_id
        - commit_author
        - commit_message
        - type
        - status
        - logs

    StatusPipelineJob:
      type: string
      enum:
        - "pending"
        - "done"
        - "in progress"
        - "failed"
        - "canceled"

    JobLog:
      type: object
      properties:
        command:
          type: string
          example: "/usr/bin/go build"
        output:
          type: string
          example: ""
      required:
        - command
        - output

  requestBodies:
    LoginRequestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
                format: username
                example: "admin"
              password:
                type: string
                format: password
                example: "password"
            required:
              - email
              - password

  parameters:
    pipeline_name:
      name: pipeline_name
      in: path
      required: true
      schema:
        type: string
    job_id:
      name: job_id
      in: path
      required: true
      schema:
        type: string
    embed:
      name: embed
      in: query
      schema:
        type: array
        items:
          type: string
          enum:
            - "jobs"
    from:
      name: from
      in: query
      schema:
        type: string
        format: "date-time"
    to:
      name: to
      in: query
      schema:
        type: string
        format: "date-time"
    asc:
      name: asc
      in: query
      schema:
        type: boolean
        default: false