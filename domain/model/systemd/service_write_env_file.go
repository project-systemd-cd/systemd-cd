package systemd

import (
	"bytes"
	"systemd-cd/domain/model/toml"
)

// writeEnvFile implements iSystemdService
func (s Systemd) writeEnvFile(e map[string]string, path string) error {
	// Check env file path and mkdir
	if strings.HasSuffix(path, "/") {
		err := fmt.Errorf("service env file path %v is not a file", path)

		return err
	}
	if !strings.HasPrefix(path, "/") {
		err := fmt.Errorf("service env file path %v must be absolute", path)

		return err
	}
	err := mkdirIfNotExist("/" + strings.Join(strings.Split(path, "/")[1:len(strings.Split(path, "/"))-1], "/"))
	if err != nil {

		return err
	}

	// Encode
	b := &bytes.Buffer{}
	// Add annotation
	b.WriteString("#! Generated by systemd-cd\n")
	indent := ""
	err = toml.Encode(b, e, toml.EncodeOption{Indent: &indent})
	if err != nil {
		return err
	}

	// Write to file
	err = writeFile(path, b.Bytes())

	return err
}
