package systemd

import (
	"bytes"
	"systemd-cd/domain/logger"
	"systemd-cd/domain/unix"
)

// writeUnitFileService implements iSystemdService
func (s Systemd) writeUnitFileService(u UnitFileService, path string) (err error) {
	logger.Logger().Debug("START - Write systemd unit file")
	logger.Logger().Debugf("< path = %v", path)
	logger.Logger().Debugf("< unitFile.UnitDirective.Description = %v", u.Unit.Description)
	logger.Logger().Tracef("< unitFile = %+v", u)
	defer func() {
		if err == nil {
			logger.Logger().Debug("END   - Write systemd unit file")
		} else {
			logger.Logger().Error("FAILED - Write systemd unit file")
			logger.Logger().Error(err)
		}
	}()

	// Marshal
	b := &bytes.Buffer{}
	// Add annotation to distinct generator
	b.WriteString("#! Generated by systemd-cd\n")
	if b2, err := MarshalUnitFile(u); err != nil {
		return err
	} else {
		b.Write(b2)
	}

	// Write to file
	err = unix.WriteFile(path, b.Bytes())
	if err != nil {
		return err
	}

	return nil
}
